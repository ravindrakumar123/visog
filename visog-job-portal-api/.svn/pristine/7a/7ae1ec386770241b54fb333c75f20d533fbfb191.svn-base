package com.vsoftcorp.usermgmt.serviceimpl;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;
import javax.inject.Singleton;

import org.apache.log4j.Logger;

import com.vsoftcorp.usermgmt.dao.SuperAdminDao;
import com.vsoftcorp.usermgmt.model.InstitutionMaster;
import com.vsoftcorp.usermgmt.req.InstituteReq;
import com.vsoftcorp.usermgmt.res.InstituteRes;
import com.vsoftcorp.usermgmt.service.SuperAdminService;

@Singleton
public class SuperAdminServiceImpl implements SuperAdminService {

	private static final Logger logger = Logger
			.getLogger(SuperAdminServiceImpl.class);

	@Inject
	SuperAdminDao dao;

	/**
	 *  This method save institution by using instituteReq
	 */
	public Long saveInstitute(InstituteReq instituteReq) {

		InstitutionMaster institutionMaster = new InstitutionMaster();
		institutionMaster.setAddr1(instituteReq.getAddr1());
		institutionMaster.setAddr2(instituteReq.getAddr2());
		institutionMaster.setCity(instituteReq.getCity());
		institutionMaster.setName(instituteReq.getName());
		institutionMaster.setRtNum(instituteReq.getRtNum());
		institutionMaster.setState(instituteReq.getState());
		institutionMaster.setZip(instituteReq.getZip());

		return dao.saveInstitute(institutionMaster);

	}
	
	/**
	 * This method updates institution by using instituteReq and institution id
	 */

	public void updateInstitute(InstituteReq instituteReq, Long instId) {
		InstitutionMaster institutionMaster = dao.getInstitute(instId);
		
		institutionMaster.setAddr1(instituteReq.getAddr1());
		institutionMaster.setAddr2(instituteReq.getAddr2());
		institutionMaster.setCity(instituteReq.getCity());
		institutionMaster.setName(instituteReq.getName());
		institutionMaster.setRtNum(instituteReq.getRtNum());
		institutionMaster.setState(instituteReq.getState());
		institutionMaster.setZip(instituteReq.getZip());

		dao.updateInstitute(institutionMaster);

	}

	/**
	 * This method deletes institution by using institution id
	 */
	public Boolean deleteInstitute(Long instId) {

		return dao.deleteInstitute(instId);

	}

	/**
	 * This method returns institution by using institution id
	 */
	public InstituteRes getInstitute(Long instId) {

		InstitutionMaster institutionMaster = dao.getInstitute(instId);

		InstituteRes instituteRes = new InstituteRes();
		instituteRes.setAddr1(institutionMaster.getAddr1());
		instituteRes.setAddr2(institutionMaster.getAddr2());
		instituteRes.setCity(institutionMaster.getCity());
		instituteRes.setId(institutionMaster.getInstId());
		instituteRes.setName(institutionMaster.getName());
		instituteRes.setRtNum(institutionMaster.getRtNum());
		instituteRes.setState(institutionMaster.getState());
		instituteRes.setZip(institutionMaster.getZip());

		return instituteRes;

	}

	/**
	 * This method returns all the institutions
	 */
	public List<InstituteRes> getInstitutes() {

		List<InstitutionMaster> institutionMasters = dao.getInstitutes();

		List<InstituteRes> instituteResList = new ArrayList<>();

		InstituteRes instituteRes = null;

		for (InstitutionMaster institutionMaster : institutionMasters) {
			instituteRes = new InstituteRes();
			instituteRes.setAddr1(institutionMaster.getAddr1());
			instituteRes.setAddr2(institutionMaster.getAddr2());
			instituteRes.setCity(institutionMaster.getCity());
			instituteRes.setId(institutionMaster.getInstId());
			instituteRes.setName(institutionMaster.getName());
			instituteRes.setRtNum(institutionMaster.getRtNum());
			instituteRes.setState(institutionMaster.getState());
			instituteRes.setZip(institutionMaster.getZip());

			instituteResList.add(instituteRes);
		}

		return instituteResList;

	}

}
